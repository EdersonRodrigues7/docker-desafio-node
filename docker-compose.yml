services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d:ro
    networks:
      - fullcycle
  node_app:
    build:
      context: ./node-app
      dockerfile: Dockerfile
    container_name: node_app
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${APP_PORT:-3000}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
    ports:
      - "${APP_PORT:-3000}:3000"
    networks:
      - fullcycle
    volumes:
      - ./node-app:/usr/src/app
      - /usr/src/app/node_modules
  nginx:
    build:
      context: ./nginx  # Directory containing Nginx configuration
      dockerfile: Dockerfile
    container_name: nginx_ederson
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - node_app
    networks:
      - fullcycle
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

networks:
  fullcycle:
    driver: bridge

volumes:
  mysql_data: